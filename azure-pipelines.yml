trigger:
  tags:
    include:
      - v*
  branches:
    include:
      - master
      - release/*
      - feature/*
      - hotfix/*
  paths:
    exclude:
      - README.md
      - helm-charts/*

pool:
  vmImage: 'ubuntu-latest'

variables:
  DOCKER_CONTAINER_REGISTRY: 'Digital Management System Docker Hub'
  DOCKER_REPOSITORY_NAME: 'digitalmanagementsystem/frontend'

stages:
- stage: Build
  jobs:
  - job: DockerBuild
    displayName: Build independently using Docker

    steps:
    - task: GitVersion@5
      inputs:
        runtime: 'core'
        configFilePath: './GitVersion.yml'

    - task: Docker@2
      displayName: "Build docker image"
      inputs:
        repository: $(DOCKER_REPOSITORY_NAME)
        command: 'build'
        Dockerfile: '$(system.defaultWorkingDirectory)/docker/Dockerfile.build'
        buildContext: '$(system.defaultWorkingDirectory)'
        arguments: '--build-arg VERSION=$(GitVersion.SemVer)'
        tags: $(GitVersion.SemVer)

    - task: Docker@2
      displayName: "Test and Coverage"
      inputs:
        command: 'build'
        Dockerfile: '$(system.defaultWorkingDirectory)/docker/Dockerfile.testAndCoverage'
        buildContext: '$(system.defaultWorkingDirectory)'
        arguments: '--build-arg COVERALLS_SERVICE_NAME=$(COVERALLS_SERVICE_NAME) --build-arg COVERALLS_REPO_TOKEN=$(COVERALLS_REPO_TOKEN)'

    - task: Docker@2
      displayName: "Docker Login"
      inputs:
        containerRegistry: $(DOCKER_CONTAINER_REGISTRY)
        command: 'login'

    - task: Docker@2
      displayName: "Push docker image"
      inputs:
        containerRegistry: $(DOCKER_CONTAINER_REGISTRY)
        repository: $(DOCKER_REPOSITORY_NAME)
        command: 'push'
        buildContext: '$(system.defaultWorkingDirectory)'
        tags: $(GitVersion.SemVer)
       
    - task: Docker@2
      displayName: "Docker Logout"
      inputs:
        containerRegistry: $(DOCKER_CONTAINER_REGISTRY)
        command: 'logout'

  - job: AzureDevOpsBuild
    displayName: Build made for Azure DevOps Release Pipeline use only

    steps:
    - task: GitVersion@5
      inputs:
        runtime: 'core'
        configFilePath: './GitVersion.yml'
